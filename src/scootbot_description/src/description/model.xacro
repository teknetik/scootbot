<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

<!-- Define robot constants -->
<!-- Measured from Fusion Model-->
  <xacro:property name="base_width" value="0.58"/>
  <xacro:property name="base_length" value="0.66"/>
  <xacro:property name="base_height" value="0.32"/>

<!-- Measured from Fusion Model-->
  <xacro:property name="wheel_radius" value="0.12"/>
  <xacro:property name="wheel_width" value="0.05"/>
  <xacro:property name="wheel_ygap" value="0.3"/>
  <xacro:property name="wheel_zoff" value="0.01"/>
  <xacro:property name="wheel_xoff" value="0.20"/>
  
  <xacro:property name="caster_radius" value="0.075"/>
  <xacro:property name="caster_width" value="0.04"/>
  <xacro:property name="caster_ygap" value="-0.285"/>
  <xacro:property name="caster_zoff" value="0.0985"/>
  <xacro:property name="caster_xoff" value="-0.0375"/>

 <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0.0 -0.18 0.10"/>
      <!-- <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>  -->
      <geometry>
        <mesh filename="file:///home/ubuntu/scootbot/install/scootbot_description/share/scootbot_description/src/description/frame.obj" scale="0.001 0.001 0.001"/>
      </geometry>
       <material name="red">
        <color rgba="1 0.4 0.4 1"/>
      </material>
    </visual>
   <collision>
      <origin rpy="0 0 0" xyz="0.0 -0.18 0.10"/>
      <geometry>
        <mesh filename="file:///home/ubuntu/scootbot/install/scootbot_description/share/scootbot_description/src/description/frame.obj" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="10.455"/>
      <origin xyz="0.0 -0.18 0.10"/>
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296"/>
    </inertial>

    
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>
<!-- Robot Footprint -->
  <link name="base_footprint"/>

 <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint> 

 <!-- Wheels -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect mirror x y">
    <link name="${prefix}_link">
    <contact>
      <lateral_friction value="1.0"/>
      <rolling_friction value="0.0"/>
      <stiffness value="30000"/>
      <damping value="1000"/>
    </contact>
    
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.02467" iyz="0" izz="0.04411"/>
    </inertial>
      <visual>
        <origin xyz="${x} ${y} -0.135" rpy="${pi/2} 0 ${mirror} "/>
        <geometry>
        <mesh filename="file:///home/ubuntu/scootbot/install/scootbot_description/share/scootbot_description/src/description/tyre.obj" scale="0.002 0.002 0.002"/>
      </geometry>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
     <collision>
        <origin xyz="${x} ${y} -0.135" rpy="${pi/2} 0 ${mirror} "/>
        <geometry>
        <mesh filename="file:///home/ubuntu/scootbot/install/scootbot_description/share/scootbot_description/src/description/tyre.obj" scale="0.002 0.002 0.002"/>
      </geometry>

        <!-- <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry> -->
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link> 
     
    <gazebo reference="${prefix}_link">
      <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Grey</material>
    <turnGravityOff>false</turnGravityOff>
</gazebo>

    <joint name="drivewhl_${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro> 

  <xacro:wheel prefix="l" x_reflect="1" y_reflect="0.43" mirror="0" x="-0.135" y="-0.045"/>
  <xacro:wheel prefix="r" x_reflect="1" y_reflect="-0.47" mirror="3.15" x="0.135" y="0.06"/>

 <!-- Caster Frame -->


<xacro:macro name="caster_frame" params="prefix x_reflect y_reflect">
    <link name="caster_frame_${prefix}_link">
      <visual>
        <origin xyz="0.22 -0.005 0.075" rpy="0 0 0"/>
        <geometry>
            <mesh filename="file:///home/ubuntu/scootbot/install/scootbot_description/share/scootbot_description/src/description/caster_frame.obj" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
     <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${caster_radius}" length="${caster_width}"/>
        </geometry>
      </collision>
    </link> 

    <joint name="caster_frame_${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="caster_frame_${prefix}_link"/>
      <origin xyz="-0.221 -0.1752 0.026" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>
  </xacro:macro> 

<xacro:caster_frame prefix="l" x_reflect="1" y_reflect="0.43"/>


 <!-- Caster Wheels -->
  <xacro:macro name="caster_wheel" params="prefix x_reflect y_reflect">
    <link name="casterwhl_${prefix}_link">
      <visual>
        <!-- <origin xyz="0.22 -0.165 -0.01" rpy="${pi/2} 0 0"/> -->
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${caster_radius}" length="${caster_width}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
     <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${caster_radius}" length="${caster_width}"/>
        </geometry>
        <surface>
        <friction>
          <ode>
            <mu>0.01</mu>
            <mu2>0.01</mu2>
          </ode>
        </friction>
        <contact>
          <ode>
            <min_depth>0.0</min_depth>
          </ode>
        </contact>
      </surface>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${caster_radius}" h="${caster_width}"/>
    </link> 

    <joint name="casterwhl_${prefix}_joint" type="continuous">
      <parent link="caster_frame_${prefix}_link"/>
      <child link="casterwhl_${prefix}_link"/>
      <origin xyz="${x_reflect*caster_xoff} ${y_reflect*(base_width/2+caster_ygap)} ${-caster_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro> 

  <xacro:caster_wheel prefix="l" x_reflect="1" y_reflect="0.43"/>
  <!-- <xacro:caster_wheel prefix="r" x_reflect="1" y_reflect="-0.47"/> -->



</robot>